apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-lib' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-lib-dev' }
}

group 'eu._5gzorro'

jar {
    baseName '5gzorro-workflows'
}

test {
    minHeapSize = "512m"
    maxHeapSize = "2048m"
}

cordapp {
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    workflow {
        name "5GZorro Flows"
        vendor "Bartr Technologies"
        versionId 1
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            java.outputDir = file('bin/main')
        }
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        java {
            srcDir 'src/test/java'
            java.outputDir = file('bin/main')
        }
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    testImplementation("junit:junit:$junit_version")

    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"

    testImplementation("$corda_release_group:corda-node-driver:$corda_release_version")

    // CorDapp dependencies.
    cordapp project(":corda-driver:contracts")

    implementation(project(":dlt-driver-api"))

    // OkHTTP: A simple HTTP library.
    implementation("com.squareup.okhttp3:okhttp:$okhttp_version")
    testImplementation("com.squareup.okhttp3:mockwebserver:$okhttp_version")

    implementation(project(":tm-forum"))
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/5GZORRO/smart-contract-lifecycle-manager"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

