apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "smart-contract-lifecycle-mgr-api.fullname" . }}
  labels:
    {{- include "smart-contract-lifecycle-mgr-api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "smart-contract-lifecycle-mgr-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "smart-contract-lifecycle-mgr-api.fullname" . }}
        {{- include "smart-contract-lifecycle-mgr-api.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "smart-contract-lifecycle-mgr-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "docker.pkg.github.com/5gzorro/legal-prose-repository/smart-contract-lifecycle-mgr-api:{{ .Values.dockerTag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 8080
            protocol: TCP
        env:
        # [SQL Configuration]
        - name: POSTGRES_DB_HOST
          value: {{ .Values.postgres.host }}
        - name: POSTGRES_DB_PORT
          value: "{{ .Values.postgres.port }}"
        - name: POSTGRES_DB_USER
          valueFrom:
              secretKeyRef:
                  name: smart-contract-lifecycle-mgr-api-db-credentials
                  key: username
        - name: POSTGRES_DB_PASSWORD
          valueFrom:
              secretKeyRef:
                  name: smart-contract-lifecycle-mgr-api-db-credentials
                  key: password
        - name: POSTGRES_DB_NAME
          valueFrom:
              secretKeyRef:
                  name: smart-contract-lifecycle-mgr-api-db-credentials
                  key: name
        #Â [Application Environment Variables]
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Values.spring.profiles }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.appPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold:  {{ .Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.appPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold:  {{ .Values.livenessProbe.failureThreshold }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
