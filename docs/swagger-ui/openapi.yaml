{
  "components": {
    "schemas": {
      "ProductCharacteristic": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "atType": {
            "type": "string"
          }
        }
      },
      "AgreementRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ServiceSpecCharacteristic": {
        "type": "object",
        "properties": {
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "isUnique": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "serviceSpecCharacteristicValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecCharacteristicValue"
            }
          },
          "type": {
            "type": "string"
          },
          "valueSchemaLocation": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "maxCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "baseType": {
            "type": "string"
          },
          "minCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "serviceSpecCharRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecCharRelationship"
            }
          },
          "regex": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "extensible": {
            "type": "boolean"
          },
          "configurable": {
            "type": "boolean"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "productSpecification": {
            "$ref": "#/components/schemas/ProductSpecificationRef"
          },
          "name": {
            "type": "string"
          },
          "productRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRelationship"
            }
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "place": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Place"
            }
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "atType": {
            "type": "string"
          },
          "characteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCharacteristic"
            }
          }
        }
      },
      "AgreementTermOrCondition": {
        "type": "object",
        "properties": {
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ProductRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ChannelRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "isBundle": {
            "type": "boolean"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ResourceSpecCharacteristic": {
        "type": "object",
        "properties": {
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "isUnique": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "valueSchemaLocation": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "maxCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "baseType": {
            "type": "string"
          },
          "resourceSpecCharacteristicValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecCharacteristicValue"
            }
          },
          "minCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "regex": {
            "type": "string"
          },
          "resourceSpecCharRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecCharRelationship"
            }
          },
          "valueType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "extensible": {
            "type": "boolean"
          },
          "configurable": {
            "type": "boolean"
          }
        }
      },
      "CredentialAttributeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ProductSpecificationCharacteristicValueUse": {
        "type": "object",
        "properties": {
          "productSpecification": {
            "$ref": "#/components/schemas/ProductSpecificationRef"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "maxCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "baseType": {
            "type": "string"
          },
          "minCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productSpecCharacteristicValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationCharacteristicValue"
            }
          },
          "href": {
            "type": "string"
          }
        }
      },
      "ServiceLevelSpecificationRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "PagedSlaResponse": {
        "type": "object",
        "properties": {
          "pagedSLAs": {
            "$ref": "#/components/schemas/PageServiceLevelAgreement"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "format": "int32",
            "type": "integer"
          },
          "nano": {
            "format": "int32",
            "type": "integer"
          },
          "minute": {
            "format": "int32",
            "type": "integer"
          },
          "second": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "TimePeriod": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string"
          },
          "endDateTime": {
            "type": "string"
          }
        }
      },
      "BillingAccountRef": {
        "type": "object",
        "properties": {
          "atReferredType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "Instant": {
        "type": "object",
        "properties": {
          "nano": {
            "format": "int32",
            "type": "integer"
          },
          "epochSecond": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "AppointmentRef": {
        "type": "object",
        "properties": {
          "atReferredType": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "OrderItemRelationShip": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "reliesOn",
              "brings",
              "hasParent",
              "hasChild"
            ]
          }
        }
      },
      "QualificationRef": {
        "type": "object",
        "properties": {
          "atReferredType": {
            "type": "string"
          },
          "qualificationItemId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "author": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "PaymentRef": {
        "type": "object",
        "properties": {
          "atReferredType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "ZoneRules": {
        "type": "object",
        "properties": {
          "fixedOffset": {
            "type": "boolean"
          },
          "transitionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransitionRule"
            }
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneOffsetTransition"
            }
          }
        }
      },
      "BundledProductOffering": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "bundledProductOfferingOption": {
            "$ref": "#/components/schemas/BundledProductOfferingOption"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ProductSpecificationCharacteristicRelationship": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "charSpecSeq": {
            "format": "int32",
            "type": "integer"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ResourceSpecificationRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string"
          },
          "consequence": {
            "type": "string"
          },
          "metric": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "tolerance": {
            "type": "string"
          },
          "referenceValue": {
            "type": "string"
          }
        }
      },
      "ServiceSpecificationRef": {
        "type": "object",
        "properties": {
          "targetServiceSchema": {
            "$ref": "#/components/schemas/TargetServiceSchema"
          },
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "DIDStateDto": {
        "type": "object",
        "properties": {
          "updated_at": {
            "type": "string"
          },
          "credential_offer_dict": {
            "$ref": "#/components/schemas/CredentialOfferDto"
          },
          "schema_id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "credential_exchange_id": {
            "type": "string"
          }
        }
      },
      "UpdateProductOfferingRequest": {
        "type": "object",
        "required": [
          "did",
          "geographicAddresses",
          "productOffering",
          "productOfferingPrices",
          "productSpecification",
          "resourceSpecifications",
          "serviceSpecifications"
        ],
        "properties": {
          "productOfferingPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingPrice"
            }
          },
          "productSpecification": {
            "$ref": "#/components/schemas/ProductSpecification"
          },
          "productOffering": {
            "$ref": "#/components/schemas/ProductOffering"
          },
          "invitations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Invitation"
            },
            "type": "object"
          },
          "resourceSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecification"
            }
          },
          "serviceSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecification"
            }
          },
          "geographicAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicAddress"
            }
          },
          "did": {
            "type": "string"
          }
        }
      },
      "TargetProductSchema": {
        "type": "object",
        "properties": {
          "schemaLocation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "PageServiceLevelAgreement": {
        "type": "object",
        "properties": {
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "last": {
            "type": "boolean"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceLevelAgreement"
            }
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ResourceSpecCharRelationship": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          }
        }
      },
      "ChangeProductOrderRequest": {
        "type": "object",
        "required": [
          "did",
          "productOrder"
        ],
        "properties": {
          "supplierDid": {
            "type": "string"
          },
          "invitations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Invitation"
            },
            "type": "object"
          },
          "verifiableCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifiableCredential"
            }
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "productOrder": {
            "$ref": "#/components/schemas/ProductOrder"
          },
          "did": {
            "type": "string"
          }
        }
      },
      "PublishProductOfferingRequest": {
        "type": "object",
        "required": [
          "did",
          "geographicAddresses",
          "productOffering",
          "productOfferingPrices",
          "productSpecification",
          "resourceSpecifications",
          "serviceSpecifications"
        ],
        "properties": {
          "productOfferingPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingPrice"
            }
          },
          "productSpecification": {
            "$ref": "#/components/schemas/ProductSpecification"
          },
          "productOffering": {
            "$ref": "#/components/schemas/ProductOffering"
          },
          "invitations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Invitation"
            },
            "type": "object"
          },
          "verifiableCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifiableCredential"
            }
          },
          "resourceSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecification"
            }
          },
          "serviceSpecifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecification"
            }
          },
          "geographicAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicAddress"
            }
          },
          "did": {
            "type": "string"
          }
        }
      },
      "AgreementItem": {
        "type": "object",
        "properties": {
          "termOrCondition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementTermOrCondition"
            }
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRef"
            }
          },
          "productOffering": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingRef"
            }
          },
          "schemaLocation": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "TemporalUnit": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "durationEstimated": {
            "type": "boolean"
          },
          "timeBased": {
            "type": "boolean"
          },
          "dateBased": {
            "type": "boolean"
          }
        }
      },
      "ResourceSpecification": {
        "type": "object",
        "properties": {
          "isBundle": {
            "type": "boolean"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedParty"
            }
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "resourceSpecCharacteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecCharacteristic"
            }
          },
          "resourceSpecRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecRelationship"
            }
          },
          "attachment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentRef"
            }
          },
          "feature": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "targetResourceSchema": {
            "$ref": "#/components/schemas/TargetResourceSchemaRef"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "Agreement": {
        "type": "object",
        "properties": {
          "agreementPeriod": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "agreementType": {
            "type": "string"
          },
          "associatedAgreement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementRef"
            }
          },
          "schemaLocation": {
            "type": "string"
          },
          "documentNumber": {
            "format": "int32",
            "type": "integer"
          },
          "agreementSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementSpecificationRef"
            }
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "initialDate": {
            "format": "date-time",
            "type": "string"
          },
          "characteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Characteristic"
            }
          },
          "baseType": {
            "type": "string"
          },
          "agreementAuthorization": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementAuthorization"
            }
          },
          "name": {
            "type": "string"
          },
          "completionDate": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "statementOfIntent": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "agreementItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementItem"
            }
          },
          "engagedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedParty"
            }
          },
          "status": {
            "type": "string"
          }
        }
      },
      "ServiceSpecCharRelationship": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ProductOffering": {
        "type": "object",
        "properties": {
          "isBundle": {
            "type": "boolean"
          },
          "productSpecification": {
            "$ref": "#/components/schemas/ProductSpecificationRef"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "serviceCandidate": {
            "$ref": "#/components/schemas/ServiceCandidateRef"
          },
          "channel": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelRef"
            }
          },
          "description": {
            "type": "string"
          },
          "productOfferingPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingPriceRef"
            }
          },
          "type": {
            "type": "string"
          },
          "resourceCandidate": {
            "$ref": "#/components/schemas/ResourceCandidateRef"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "bundledProductOffering": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundledProductOffering"
            }
          },
          "statusReason": {
            "type": "string"
          },
          "attachment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentRefOrValue"
            }
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "place": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceRef"
            }
          },
          "productOfferingTerm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingTerm"
            }
          },
          "marketSegment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketSegmentRef"
            }
          },
          "prodSpecCharValueUse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationCharacteristicValueUse"
            }
          },
          "agreement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgreementRef"
            }
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "isSellable": {
            "type": "boolean"
          },
          "serviceLevelAgreement": {
            "$ref": "#/components/schemas/SLARef"
          },
          "version": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryRef"
            }
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "quantity": {
            "format": "int64",
            "type": "integer"
          },
          "productOffering": {
            "$ref": "#/components/schemas/ProductOfferingRef"
          },
          "itemTotalPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPrice"
            }
          },
          "appointment": {
            "$ref": "#/components/schemas/AppointmentRef"
          },
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccountRef"
          },
          "itemTerm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderTerm"
            }
          },
          "qualification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QualificationRef"
            }
          },
          "action": {
            "type": "string",
            "enum": [
              "add",
              "modify",
              "noChange",
              "delete"
            ]
          },
          "itemPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPrice"
            }
          },
          "orderItemRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemRelationShip"
            }
          },
          "payment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentRef"
            }
          },
          "id": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "acknowledged",
              "inProgress",
              "cancelled",
              "completed",
              "rejected",
              "pending",
              "held",
              "failed",
              "partial"
            ]
          },
          "atType": {
            "type": "string"
          }
        }
      },
      "TemplateRef": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "ProductSpecificationCharacteristic": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "isUnique": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "maxCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "baseType": {
            "type": "string"
          },
          "minCardinality": {
            "format": "int32",
            "type": "integer"
          },
          "regex": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productSpecCharRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationCharacteristicRelationship"
            }
          },
          "productSpecCharacteristicValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationCharacteristicValue"
            }
          },
          "href": {
            "type": "string"
          },
          "extensible": {
            "type": "boolean"
          },
          "configurable": {
            "type": "boolean"
          }
        }
      },
      "ProductSpecificationRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "targetProductSchema": {
            "$ref": "#/components/schemas/TargetProductSchema"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Place": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "atReferredType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "ResourceSpecRelationship": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "CategoryRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "RelatedPartyRef": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "PlaceRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "GeographicPoint": {
        "type": "object",
        "properties": {
          "x": {
            "type": "string"
          },
          "y": {
            "type": "string"
          },
          "z": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "MarketSegmentRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ProductOfferingPriceRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "format": "int32",
            "type": "integer"
          },
          "offset": {
            "format": "int64",
            "type": "integer"
          },
          "pageSize": {
            "format": "int32",
            "type": "integer"
          },
          "unpaged": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          }
        }
      },
      "CredentialOfferDto": {
        "type": "object",
        "properties": {
          "credential_preview": {
            "$ref": "#/components/schemas/CredentialPreviewDto"
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "SLARef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CredentialPreviewDto": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CredentialAttributeDto"
            }
          },
          "did": {
            "type": "string"
          }
        }
      },
      "PagedAgreementResponse": {
        "type": "object",
        "properties": {
          "pagedAgreements": {
            "$ref": "#/components/schemas/PageAgreement"
          }
        }
      },
      "TargetServiceSchema": {
        "type": "object",
        "properties": {
          "schemaLocation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "AgreementSpecificationRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "AttachmentRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ProductSpecificationRelationship": {
        "type": "object",
        "properties": {
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ZoneOffsetTransitionRule": {
        "type": "object",
        "properties": {
          "localTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "dayOfMonthIndicator": {
            "format": "int32",
            "type": "integer"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "standardOffset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "midnightEndOfDay": {
            "type": "boolean"
          },
          "timeDefinition": {
            "type": "string",
            "enum": [
              "UTC",
              "WALL",
              "STANDARD"
            ]
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          }
        }
      },
      "OrderTerm": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Quantity"
          },
          "@type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ResourceSpecCharacteristicValue": {
        "type": "object",
        "properties": {
          "valueTo": {
            "format": "int32",
            "type": "integer"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "valueFrom": {
            "format": "int32",
            "type": "integer"
          },
          "baseType": {
            "type": "string"
          },
          "rangeInterval": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "regex": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "GeographicLocation": {
        "type": "object",
        "properties": {
          "spatialRef": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accuracy": {
            "type": "string"
          },
          "geometry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeographicPoint"
            }
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "geometryType": {
            "type": "string"
          }
        }
      },
      "Characteristic": {
        "type": "object",
        "properties": {
          "schemaLocation": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "atType": {
            "type": "string"
          }
        }
      },
      "Invitation": {
        "type": "object"
      },
      "AgreementAuthorization": {
        "type": "object",
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "signaturePresentation": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "OrderPrice": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "name": {
            "type": "string"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "recuring",
              "oneTime",
              "usage"
            ]
          },
          "description": {
            "type": "string"
          },
          "recurringChargePeriod": {
            "type": "string"
          },
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccountRef"
          },
          "atType": {
            "type": "string"
          },
          "priceAlteration": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PriceAlteration"
            }
          }
        }
      },
      "ApiErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "errors": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object"
          },
          "status": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ServiceLevelAgreement": {
        "type": "object",
        "properties": {
          "approved": {
            "type": "boolean"
          },
          "templateRef": {
            "$ref": "#/components/schemas/TemplateRef"
          },
          "approvalDate": {
            "format": "date-time",
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "rule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Duration": {
        "type": "object",
        "properties": {
          "zero": {
            "type": "boolean"
          },
          "seconds": {
            "format": "int64",
            "type": "integer"
          },
          "negative": {
            "type": "boolean"
          },
          "nano": {
            "format": "int32",
            "type": "integer"
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemporalUnit"
            }
          }
        }
      },
      "ServiceCandidateRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ProductOfferingTerm": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "duration": {
            "$ref": "#/components/schemas/Quantity"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "OffsetDateTime": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "offset": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "hour": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfYear": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfMonth": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "type": "integer"
          },
          "monthValue": {
            "format": "int32",
            "type": "integer"
          },
          "nano": {
            "format": "int32",
            "type": "integer"
          },
          "minute": {
            "format": "int32",
            "type": "integer"
          },
          "second": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Price": {
        "type": "object",
        "properties": {
          "taxRate": {
            "format": "float",
            "type": "number"
          },
          "atSchemaLocation": {
            "type": "string"
          },
          "percentage": {
            "format": "float",
            "type": "number"
          },
          "taxIncludedAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "atType": {
            "type": "string"
          },
          "dutyFreeAmount": {
            "$ref": "#/components/schemas/Money"
          }
        }
      },
      "RelatedParty": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "extendedInfo": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ResourceCandidateRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "PublishProductOrderRequest": {
        "type": "object",
        "required": [
          "did",
          "productOrder"
        ],
        "properties": {
          "supplierDid": {
            "type": "string"
          },
          "invitations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Invitation"
            },
            "type": "object"
          },
          "verifiableCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifiableCredential"
            }
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "productOrder": {
            "$ref": "#/components/schemas/ProductOrder"
          },
          "did": {
            "type": "string"
          }
        }
      },
      "LocalDateTime": {
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "hour": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfYear": {
            "format": "int32",
            "type": "integer"
          },
          "dayOfMonth": {
            "format": "int32",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "type": "integer"
          },
          "monthValue": {
            "format": "int32",
            "type": "integer"
          },
          "nano": {
            "format": "int32",
            "type": "integer"
          },
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "minute": {
            "format": "int32",
            "type": "integer"
          },
          "second": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "PageAgreement": {
        "type": "object",
        "properties": {
          "number": {
            "format": "int32",
            "type": "integer"
          },
          "size": {
            "format": "int32",
            "type": "integer"
          },
          "numberOfElements": {
            "format": "int32",
            "type": "integer"
          },
          "last": {
            "type": "boolean"
          },
          "totalPages": {
            "format": "int32",
            "type": "integer"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "first": {
            "type": "boolean"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Agreement"
            }
          },
          "totalElements": {
            "format": "int64",
            "type": "integer"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ServiceSpecification": {
        "type": "object",
        "properties": {
          "isBundle": {
            "type": "boolean"
          },
          "targetServiceSchema": {
            "$ref": "#/components/schemas/TargetServiceSchema"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "serviceLevelSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceLevelSpecificationRef"
            }
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "resourceSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecificationRef"
            }
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedParty"
            }
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "attachment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentRef"
            }
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "serviceSpecCharacteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecCharacteristic"
            }
          },
          "serviceSpecRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecRelationship"
            }
          }
        }
      },
      "ProductOfferingRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ServiceSpecRelationship": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "Any": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "ZoneOffset": {
        "type": "object",
        "properties": {
          "totalSeconds": {
            "format": "int32",
            "type": "integer"
          },
          "rules": {
            "$ref": "#/components/schemas/ZoneRules"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ProductOfferingPrice": {
        "type": "object",
        "properties": {
          "isBundle": {
            "type": "boolean"
          },
          "popRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingPriceRelationship"
            }
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "recurringChargePeriodType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "recurringChargePeriodLength": {
            "format": "int32",
            "type": "integer"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Money"
          },
          "percentage": {
            "format": "float",
            "type": "number"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "place": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaceRef"
            }
          },
          "bundledPopRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundledProductOfferingPriceRelationship"
            }
          },
          "productOfferingTerm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductOfferingTerm"
            }
          },
          "prodSpecCharValueUse": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationCharacteristicValueUse"
            }
          },
          "unitOfMeasure": {
            "$ref": "#/components/schemas/Quantity"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "priceType": {
            "type": "string"
          },
          "tax": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxItem"
            }
          },
          "version": {
            "type": "string"
          },
          "pricingLogicAlgorithm": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingLogicAlgorithm"
            }
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "constraint": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstraintRef"
            }
          }
        }
      },
      "VerifiableCredential": {
        "type": "object"
      },
      "PriceAlteration": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "applicationDuration": {
            "type": "string"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "name": {
            "type": "string"
          },
          "priceType": {
            "type": "string",
            "enum": [
              "recuring",
              "oneTime",
              "usage"
            ]
          },
          "description": {
            "type": "string"
          },
          "recurringChargePeriod": {
            "type": "string"
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "atType": {
            "type": "string"
          }
        }
      },
      "Money": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "string"
          },
          "value": {
            "format": "float",
            "type": "number"
          }
        }
      },
      "BundledProductOfferingOption": {
        "type": "object",
        "properties": {
          "schemaLocation": {
            "type": "string"
          },
          "numberRelOfferDefault": {
            "format": "int32",
            "type": "integer"
          },
          "numberRelOfferLowerLimit": {
            "format": "int32",
            "type": "integer"
          },
          "numberRelOfferUpperLimit": {
            "format": "int32",
            "type": "integer"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      },
      "ProductRelationship": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/Product"
          },
          "type": {
            "type": "string",
            "enum": [
              "reliesOn",
              "brings",
              "hasParent",
              "hasChild"
            ]
          }
        }
      },
      "BundledProductSpecification": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "GeographicAddress": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "streetType": {
            "type": "string"
          },
          "geographicLocation": {
            "$ref": "#/components/schemas/GeographicLocation"
          },
          "city": {
            "type": "string"
          },
          "streetNr": {
            "type": "string"
          },
          "schemaLocation": {
            "type": "string"
          },
          "locality": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "streetNrLast": {
            "type": "string"
          },
          "streetNrSuffix": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "stateOrProvince": {
            "type": "string"
          },
          "streetNrLastSuffix": {
            "type": "string"
          },
          "streetSuffix": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "ProductSpecificationCharacteristicValue": {
        "type": "object",
        "properties": {
          "valueTo": {
            "type": "string"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "valueFrom": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "rangeInterval": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "regex": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "Chronology": {
        "type": "object",
        "properties": {
          "calendarType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ZoneOffsetTransition": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/Duration"
          },
          "overlap": {
            "type": "boolean"
          },
          "gap": {
            "type": "boolean"
          },
          "offsetAfter": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "dateTimeBefore": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "dateTimeAfter": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "offsetBefore": {
            "$ref": "#/components/schemas/ZoneOffset"
          },
          "instant": {
            "$ref": "#/components/schemas/Instant"
          }
        }
      },
      "ProductOrder": {
        "type": "object",
        "properties": {
          "atSchemaLocation": {
            "type": "string"
          },
          "note": {
            "$ref": "#/components/schemas/Note"
          },
          "orderItem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          },
          "orderTotalPrice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPrice"
            }
          },
          "channel": {
            "$ref": "#/components/schemas/Channel"
          },
          "externalId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "atBaseType": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedPartyRef"
            }
          },
          "billingAccount": {
            "$ref": "#/components/schemas/BillingAccountRef"
          },
          "requestedStartDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "notificationContact": {
            "type": "string"
          },
          "completionDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "expectedCompletionDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "payment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentRef"
            }
          },
          "id": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "acknowledged",
              "inProgress",
              "cancelled",
              "completed",
              "rejected",
              "pending",
              "held",
              "failed",
              "partial"
            ]
          },
          "category": {
            "type": "string"
          },
          "orderDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          },
          "atType": {
            "type": "string"
          },
          "requestedCompletionDate": {
            "$ref": "#/components/schemas/OffsetDateTime"
          }
        }
      },
      "ConstraintRef": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "ProductOfferingPriceRelationship": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "relationshipType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Quantity": {
        "type": "object",
        "properties": {
          "amount": {
            "format": "float",
            "type": "number"
          },
          "units": {
            "type": "string"
          }
        }
      },
      "ProductSpecification": {
        "type": "object",
        "properties": {
          "isBundle": {
            "type": "boolean"
          },
          "productSpecCharacteristic": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationCharacteristic"
            }
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "targetProductSchema": {
            "$ref": "#/components/schemas/TargetProductSchema"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "resourceSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceSpecificationRef"
            }
          },
          "serviceSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceSpecificationRef"
            }
          },
          "description": {
            "type": "string"
          },
          "productNumber": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "relatedParty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedParty"
            }
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "attachment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachmentRefOrValue"
            }
          },
          "bundledProductSpecification": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BundledProductSpecification"
            }
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "productSpecificationRelationship": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSpecificationRelationship"
            }
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          }
        }
      },
      "ServiceSpecCharacteristicValue": {
        "type": "object",
        "properties": {
          "valueTo": {
            "format": "int32",
            "type": "integer"
          },
          "unitOfMeasure": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "valueFrom": {
            "format": "int32",
            "type": "integer"
          },
          "baseType": {
            "type": "string"
          },
          "rangeInterval": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "regex": {
            "type": "string"
          },
          "valueType": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "TaxItem": {
        "type": "object",
        "properties": {
          "taxRate": {
            "format": "float",
            "type": "number"
          },
          "schemaLocation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "taxAmount": {
            "$ref": "#/components/schemas/Money"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "taxCategory": {
            "type": "string"
          }
        }
      },
      "BundledProductOfferingPriceRelationship": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "PricingLogicAlgorithm": {
        "type": "object",
        "properties": {
          "lifecycleStatus": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "plaSpecId": {
            "type": "string"
          }
        }
      },
      "AttachmentRefOrValue": {
        "type": "object",
        "properties": {
          "referredType": {
            "type": "string"
          },
          "lifecycleStatus": {
            "type": "string"
          },
          "attachmentType": {
            "type": "string"
          },
          "validFor": {
            "$ref": "#/components/schemas/TimePeriod"
          },
          "schemaLocation": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          },
          "size": {
            "$ref": "#/components/schemas/Quantity"
          },
          "lifecycleStatusEnum": {
            "type": "string",
            "enum": [
              "In study",
              "In design",
              "In test",
              "Active",
              "Launched",
              "Retired",
              "Obsolete",
              "Rejected"
            ]
          },
          "lastUpdate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "TargetResourceSchemaRef": {
        "type": "object",
        "properties": {
          "schemaLocation": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "baseType": {
            "type": "string"
          }
        }
      }
    }
  },
  "servers": [
    {
      "description": "Generated server url",
      "url": "http://localhost:8087"
    }
  ],
  "openapi": "3.0.1",
  "paths": {
    "/product-order/{orderId}/acceptChange": {
      "put": {
        "operationId": "acceptChangeProductOrder",
        "responses": {
          "200": {
            "description": "Accept change product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/product-order/{orderId}/reject": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "operationId": "rejectProductOrder",
        "responses": {
          "200": {
            "description": "Reject product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/api/v1/agreement/{identifier}": {
      "get": {
        "description": "Get an agreement by id or DID",
        "operationId": "getAgreement",
        "responses": {
          "200": {
            "description": "An agreement matching the provided identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agreement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id was provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "An  couldn\u0027t be found with the provided Identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "identifier",
            "required": true
          }
        ],
        "tags": [
          "Agreement"
        ]
      }
    },
    "/product-order/{orderId}/approve": {
      "put": {
        "operationId": "approveProductOrder",
        "responses": {
          "200": {
            "description": "Approve product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/product-order": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishProductOrderRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "publishProductOrder",
        "responses": {
          "200": {
            "description": "Published product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Product Order"
        ]
      }
    },
    "/api/v1/service-level-agreement/{identifier}": {
      "get": {
        "description": "Get an SLA by id or DID",
        "operationId": "getServiceLevelAgreement",
        "responses": {
          "200": {
            "description": "An SLA matching the provided identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLevelAgreement"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id was provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "An SLA couldn\u0027t be found with the provided Identifier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "identifier",
            "required": true
          }
        ],
        "tags": [
          "Service Level Agreement"
        ]
      }
    },
    "/api/v1/agreement/{id}": {
      "delete": {
        "description": "Delete an Agreement definition by DID",
        "operationId": "removeAgreement",
        "responses": {
          "200": {
            "description": "The Agreement was deleted successfully"
          },
          "400": {
            "description": "Invalid parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "An Agreement couldn\u0027t be found with the provided DID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "did",
            "required": true
          }
        ],
        "tags": [
          "Agreement"
        ]
      }
    },
    "/product-order/{orderId}": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProductOrderRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "changeProductOrder",
        "responses": {
          "200": {
            "description": "Propose change product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/product-order/{orderId}/end": {
      "put": {
        "operationId": "endProductOrder",
        "responses": {
          "200": {
            "description": "End product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/api/v1/service-level-agreement/{did}": {
      "delete": {
        "description": "Delete an SLA definition by DID",
        "operationId": "removeServiceLevelAgreement",
        "responses": {
          "200": {
            "description": "The SLA was deleted successfully"
          },
          "400": {
            "description": "Invalid parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "An SLA couldn\u0027t be found with the provided DID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "did",
            "required": true
          }
        ],
        "tags": [
          "Service Level Agreement"
        ]
      }
    },
    "/product-offer/{offerId}": {
      "delete": {
        "operationId": "removeProductOffering",
        "responses": {
          "200": {
            "description": "Product offering removed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "offerId",
            "required": true
          }
        ],
        "tags": [
          "Product Offer"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductOfferingRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "updateProductOffering",
        "responses": {
          "200": {
            "description": "Product offering updated",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "offerId",
            "required": true
          }
        ],
        "tags": [
          "Product Offer"
        ]
      }
    },
    "/product-offer": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PublishProductOfferingRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "publishProductOffering",
        "responses": {
          "200": {
            "description": "Published product offering",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Product Offer"
        ]
      }
    },
    "/product-order/{orderId}/rejectChange": {
      "put": {
        "operationId": "rejectChangeProductOrder",
        "responses": {
          "200": {
            "description": "Reject change product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/product-order/{orderId}/provision": {
      "put": {
        "operationId": "provisionProductOrder",
        "responses": {
          "200": {
            "description": "Provision product order",
            "content": {
              "*/*": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "orderId",
            "required": true
          }
        ],
        "tags": [
          "Product Order"
        ]
      }
    },
    "/api/v1/agreement/{id}/identity": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DIDStateDto"
              }
            }
          },
          "required": true
        },
        "description": "Callback endpoint to handle processing async DID identifier generation",
        "operationId": "updateTemplateIdentity",
        "responses": {
          "200": {
            "description": "The Agreement was updated successfully"
          },
          "400": {
            "description": "Invalid parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "An Agreement couldn\u0027t be found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "tags": [
          "Agreement"
        ]
      }
    },
    "/api/v1/service-level-agreement": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceLevelAgreement"
              }
            }
          },
          "required": true
        },
        "description": "Create a new Service Level Agreement definition",
        "operationId": "createServiceLevelAgreement",
        "responses": {
          "201": {
            "description": "A SLA definition was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid SLA definition provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Service Level Agreement"
        ]
      },
      "get": {
        "description": "Retrieve a paged collection of Service Level Agreements according to paging and filter parameters",
        "operationId": "getServiceLevelAgreements",
        "responses": {
          "200": {
            "description": "A Paged List of Service Level Agreements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedSlaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid page or filter parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": "0",
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Page you want to retrieve (0..N)"
          },
          {
            "schema": {
              "default": "20",
              "type": "integer"
            },
            "in": "query",
            "name": "size",
            "description": "Number of records per page."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "sort",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          }
        ],
        "tags": [
          "Service Level Agreement"
        ]
      }
    },
    "/api/v1/service-level-agreement/{slaId}/identity": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DIDStateDto"
              }
            }
          },
          "required": true
        },
        "description": "Callback endpoint to handle processing async DID identifier generation",
        "operationId": "updateTemplateIdentity_1",
        "responses": {
          "200": {
            "description": "The SLA was updated successfully"
          },
          "400": {
            "description": "Invalid parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "An SLA couldn\u0027t be found with the provided ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "in": "path",
            "name": "slaId",
            "required": true
          }
        ],
        "tags": [
          "Service Level Agreement"
        ]
      }
    },
    "/api/v1/agreement": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agreement"
              }
            }
          },
          "required": true
        },
        "description": "Create a new Service Level Agreement definition",
        "operationId": "createAgreement",
        "responses": {
          "201": {
            "description": "A Agreement definition was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Agreement definition provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Agreement"
        ]
      },
      "get": {
        "description": "Retrieve a paged collection of Agreements according to paging and filter parameters",
        "operationId": "getAgreements",
        "responses": {
          "200": {
            "description": "A Paged List of Agreements",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedAgreementResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid page or filter parameters provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "default": "0",
              "type": "integer"
            },
            "in": "query",
            "name": "page",
            "description": "Page you want to retrieve (0..N)"
          },
          {
            "schema": {
              "default": "20",
              "type": "integer"
            },
            "in": "query",
            "name": "size",
            "description": "Number of records per page."
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "sort",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported."
          }
        ],
        "tags": [
          "Agreement"
        ]
      }
    }
  },
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  }
}